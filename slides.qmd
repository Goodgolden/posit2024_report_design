---
title: "Report Design in R: Small Tweaks that Make a Big Difference"
format:
  rfortherestofus-slides-revealjs:
    menu: false
    progress: false
    slide-number: true
    show-slide-number: print
    incremental: true
    center: true
    auto-animate: true
    transition: fade
    code-overflow: wrap
    spotlight:
      presentingCursor: default
      toggleSpotlightOnMouseDown: false
      spotlightOnKeyPressAndHold: 73
revealjs-plugins:
  - spotlight
execute: 
  message: false
  warning: false
  cache: false
  out-width: 100%
  fig-align: center
title-slide-attributes:
  data-background-image: assets/rru-hex-bg-gradient-dark.svg
  data-background-size: cover
editor_options: 
  chunk_output_type: inline
---

```{r}
library(tidyverse)
library(scales)
library(patchwork)
library(qrcode)
library(janitor)
library(sf)
```



# {background-image="assets/ocf-building.jpg" .inverse}

# {background-image="assets/david-kid.jpg" .inverse}

::: {.notes}
- Talk about how it was making multiple reports
:::

# {background-image="assets/ost-programs.png" .inverse}

# {background-image="assets/david-disheviled.jpg" .inverse}

# {background-image="assets/david-hawaii.jpg" .inverse}

# {background-image="assets/road-split.jpg" .inverse}


---

## Work With Other Tools {background-image="assets/road-split-left.jpg" .inverse}


---

## Make Ugly Reports {background-image="assets/road-split-right.jpg" .inverse}

---

![](assets/quarto-default-pdf.png){height=700px fig-align="center"}

# {background-image="assets/road-split.jpg" .inverse}


## {background-image="assets/road-split-middle.jpg" .inverse}

:::{.absolute top=-300 style="text-align: center; font-size: 100px;"}
**Make Beautiful Reports in R**
:::



# {background-image="assets/psc-sample-only-two-pages.png" background-position="top"}


---

```{r}
ct_towns <-
  st_read(
    here::here("data/shp/shp_town.shp"),
    quiet = TRUE
  ) |>
  clean_names() |>
  filter(name != "County subdivisions not defined") |>
  mutate(north_position = parse_number(intptlat)) |>
  arrange(north_position) |>
  mutate(town_number = row_number())

ct_towns |>
  ggplot() +
  geom_sf(color = "white") +
  geom_sf_text(
    aes(label = town_number),
    size = 2.5,
    family = "Inter"
  ) +
  theme_void()
```


# {background-image="assets/david-wedding.jpg" .inverse}

# {background-image="assets/david-wedding.jpg" .inverse}

::: {.absolute top=-200 style="font-size: 46px;"}
\* Results not guaranteed 
:::

# Does Design Matter? {.inverse}

::: {.notes}
- Talk about how some devs don't think it matters at all
- "I'm David and I think design matters because here's what you can do with it"
:::

## Aesthetic Usability Effect {background-image="assets/mountains.jpg" .center .inverse}

::: {.notes}
Users see aesthetically pleasing designs as more intuitive
:::



## Good Design Builds Trust {background-image="assets/handshake2.jpg" .center .inverse}

::: {.notes}
Putting effort into your charts shows respect for your audience, **which means that they in turn are going to respect you and your findings**.
:::


## But I'm Not a Designer! {.inverse .center}

::: {.notes}
But design is a skill that can be taught and R users already have many of the skills needed to do good design

I'm not a designer either
:::

# Good Design is Just a Few Small Tweaks {background-image="assets/tweaks2.jpg" .inverse .center}

---

## Framework for Good Design

. . .

:::{.large}
- **Do**: Be consistent

- **Don't**: Use defaults
:::



---

## What is a Report? {.inverse .center}

---

### Create a Layout {.center-slide}


![](assets/psc-report-layout.png){height=650px fig-align="center"}

---

### Add Brand Colors {.center-slide}


![](assets/psc-report-color.png){height=650px fig-align="center"}

---

### Add Brand Fonts {.center-slide}

![](assets/psc-report-font.png){height=650px fig-align="center"}

---

### Add Plots {.center-slide}

![](assets/psc-report-plots.png){height=650px fig-align="center"}




---

![](assets/typst-report.png){height=700px fig-align="center"}

---

## Identify Brand Colors {.inverse}

---

## {.center}

![](assets/psc-website.jpeg){height=700px fig-align="center"}


---

## {.center}
```{r}
psc_blue <- "#15397F"
psc_red <- "#9F3515"
```

```{r}
show_col(
  c(
    psc_blue,
    psc_red
  ),
  borders = NA
)
```

## Identify Brand Fonts {.inverse}

::: {.notes}
Talk about how to identify fonts on websites
:::

# Create a Layout {.inverse}

## typst {.inverse .center}

```{r}
#| eval: false
quarto::quarto_render("report.qmd")

renderthis::to_png(
  from = "report.pdf",
  to = "assets/typst-report.png"
)
```

## {.center}

:::{.img-no-shadow}
![](assets/typst-workflow-report.png){fig-align="center"}
:::

---

## {.center}

:::{.img-no-shadow}
![](assets/typst-workflow-show.png){fig-align="center"}
:::

---

## {.center}

:::{.img-no-shadow}
![](assets/typst-workflow-template.png){fig-align="center"}
:::

---

## {.center}

:::{.img-no-shadow}
![](assets/typst-workflow.png){fig-align="center"}
:::

## report.qmd

. . .

```{markdown}
#| echo: true
#| code-line-numbers: "2,10-11"
---
title: "Housing Data Profiles"

format: 
  typst:
    template-partials:
      - typst-show.typ
      - typst-template.typ

params:
  town: "Hartford"
---

# Introduction

Consequat occaecat mollit velit aliquip. Sunt Lorem ...
```

::: {.notes}
Mention that I will have link to slides and repo at end
:::

## report.qmd

```{markdown}
#| echo: true
#| code-line-numbers: "4-8"
---
title: "Housing Data Profiles"

format: 
  typst:
    template-partials:
      - typst-show.typ
      - typst-template.typ

params:
  town: "Hartford"
---

# Introduction

Consequat occaecat mollit velit aliquip. Sunt Lorem ...
```

## typst-show.typ

. . .

```{typst}
#| echo: true
#| eval: false
#| code-line-numbers: "1,8"
#show: psc-report.with(
  $if(title)$
    title: "$title$",
  $endif$
  $if(params.town)$
    town: "$params.town$",
  $endif$
)
```

## typst-show.typ

```{typst}
#| echo: true
#| eval: false
#| code-line-numbers: "2-4"
#show: psc-report.with(
  $if(title)$
    title: "$title$",
  $endif$
  $if(params.town)$
    town: "$params.town$",
  $endif$
)
```

## typst-show.typ

```{typst}
#| echo: true
#| eval: false
#| code-line-numbers: "5-7"
#show: psc-report.with(
  $if(title)$
    title: "$title$",
  $endif$
  $if(params.town)$
    town: "$params.town$",
  $endif$
)
```

## typst-template.typ

. . .

```{typst}
#| echo: true
#| eval: false
#| code-line-numbers: "1-3"
#let psc-report(
  title: "title",
  town: "town",
  body,
) = {

 set text()

 set page()

 body
}
```

## typst-template.typ

```{typst}
#| echo: true
#| eval: false
#| code-line-numbers: "4-12"
#let psc-report(
  title: "title",
  town: "town",
  body,
) = {

 set text()

 set page()

 body
}
```


---

:::: {.columns}

::: {.column width="50%"}
![](assets/typst-report.png)
:::

::: {.column width="50%"}
<br>
```{typst}
#| echo: true
#| eval: false
set text(
  font: "Open Sans",
  size: 12pt,
)
```
:::

::::



---

:::: {.columns}

::: {.column width="50%"}
![](assets/typst-report.png)
:::

::: {.column width="50%"}
<br>
```{typst}
#| echo: true
#| eval: false
set page(
  "us-letter",
  margin: (left: 1in, 
           right: 1in, 
           top: 0.7in, 
           bottom: 1in)
```
:::

::::

---

:::: {.columns}

::: {.column width="38%"}
![](assets/typst-report.png)
:::

::: {.column width="62%"}
<br>
```{typst}
#| echo: true
#| eval: false
background: 
  place(top, 
        rect(fill: rgb("15397F"), 
             width: 100%, 
             height: 0.5in))
```
:::

::::

---

:::: {.columns}

::: {.column width="43%"}
![](assets/typst-report.png)
:::

::: {.column width="57%"}
<br>
```{typst}
#| echo: true
#| eval: false
header: align(
  horizon,
  grid(
    columns: (80%, 20%),
    align(left, 
          text(size: 20pt, 
               fill: white, 
               weight: "bold", 
               title)),
    align(right, 
          text(size: 12pt, 
               fill: white, 
               weight: "bold", 
               town)),
  ),
)
```
:::

::::

---

:::: {.columns}

::: {.column width="31%"}
![](assets/typst-report.png)
:::

::: {.column width="69%"}
<br>
```{typst}
#| echo: true
#| eval: false
footer: align(
  grid(
    columns: (40%, 60%),
    align(horizon, 
          text(fill: rgb("15397F"), 
          size: 12pt, 
          counter(page).display("1"))),
    align(right, 
          image("assets/psclogo.svg", 
          height: 300%)),
  )
```
:::

::::

# Use Functions to Make Your Plots Consistent {.inverse}

## Comparison Plots

. . .

![](assets/comparison-plot-explanation.png)

. . .

![](assets/single-family-homes-plot.png)

. . .

![](assets/total-population-plot.png)


---


```{r}
single_family_homes <-
  read_rds("data/single_family_homes.rds")
```

```{r}
#| echo: true
#| eval: false
library(tidyverse)
library(scales)
```

. . .

```{r}
#| echo: true
#| eval: false
single_family_homes
```

```{r}
single_family_homes |>
  print(n = Inf)
```


---

```{r}
comparison_plot <- function(df, highlight_town) {
  df |>
    ggplot(
      aes(
        x = value,
        y = 1
      )
    ) +
    geom_hline(
      yintercept = 1,
      color = "gray90",
      linewidth = 0.25
    ) +
    geom_point(
      shape = 124,
      color = "gray80",
      size = 5
    ) +
    expand_limits(
      x = 0
    ) +
    theme_void() +
    theme(
      axis.text.x = element_text(
        size = 13,
        color = "gray40"
      ),
      legend.position = "none",
      plot.margin = margin(rep(20, 4))
    ) +
    geom_point(
      data = df |> filter(location == highlight_town),
      shape = 124,
      color = "gray30",
      size = 10
    )
}
```

```{r}
#| echo: true
#| eval: false
comparison_plot <- function(
  df,
  highlight_town
) { }
```

---


```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2-8"
comparison_plot <- function(df, highlight_town) {
  df |>
    ggplot(
      aes(
        x = value,
        y = 1
      )
    ) +
    ...
}
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "9-13"
comparison_plot <- function(df, highlight_town) {
  df |>
    ggplot(
      aes(
        x = value,
        y = 1
      )
    ) +
    # Light gray lines for all towns
    geom_point(
      shape = 124,
      color = "gray80"
    ) +
    ...
}
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "14-19"
comparison_plot <- function(df, highlight_town) {
  df |>
    ggplot(
      aes(
        x = value,
        y = 1
      )
    ) +
    # Light gray lines for all towns
    geom_point(
      shape = 124,
      color = "gray80"
    ) +
    # Line for town to highlight
    geom_point(
      data = df |> filter(location == highlight_town),
      shape = 124,
      color = "gray30"
    ) +
    ...
}
```

---

```{r}
#| echo: true
#| eval: false
comparison_plot(
  df = single_family_homes,
  highlight_town = "Hartford"
)
```

. . .

```{r}
#| fig-height: 1.5
comparison_plot(
  df = single_family_homes,
  highlight_town = "Hartford"
)
```


---

```{r}
comparison_plot <- function(df, highlight_town) {
  df |>
    ggplot(
      aes(
        x = value,
        y = 1
      )
    ) +
    geom_hline(
      yintercept = 1,
      color = "gray90",
      linewidth = 0.25
    ) +
    geom_point(
      shape = 124,
      color = "gray80",
      size = 5
    ) +
    scale_x_continuous(
      labels = percent_format(accuracy = 1)
    ) +
    expand_limits(
      x = 0
    ) +
    theme_void() +
    theme(
      axis.text.x = element_text(
        size = 13,
        color = "gray40"
      ),
      legend.position = "none",
      plot.margin = margin(rep(20, 4))
    ) +
    geom_point(
      data = df |> filter(location == highlight_town),
      shape = 124,
      color = "gray30",
      size = 10
    )
}
```



```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "8-10"
comparison_plot <- function(df, highlight_town) {
  ggplot(
    aes(
      x = value,
      y = 1
    )
  ) +
    scale_x_continuous(
      labels = percent_format(accuracy = 1)
    ) +
    ...
}
```

. . .


```{r}
#| fig-height: 1.5
comparison_plot(
  df = single_family_homes,
  highlight_town = "Hartford"
)
```



---

![](assets/total-population-plot.png)

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "4"
comparison_plot <- function(
  df,
  highlight_town,
  value_type
) { }
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "7-12"
comparison_plot <- function(df, highlight_town, value_type) {
  plot <-
    df |>
    ggplot() +
    ...

  if (value_type == "percent") {
    final_plot <- plot +
      scale_x_continuous(
        labels = percent_format(accuracy = 1)
      )
  }
}
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "14-19"
comparison_plot <- function(df, highlight_town, value_type) {
  plot <-
    df |>
    ggplot() +
    ...

  if (value_type == "percent") {
    final_plot <- plot +
      scale_x_continuous(
        labels = percent_format(accuracy = 1)
      )
  }

  if (value_type == "number") {
    final_plot <- plot +
      scale_x_continuous(
        labels = comma_format(accuracy = 1)
      )
  }
}
```

---

```{r}
comparison_plot <- function(df, highlight_town, value_type) {
  plot <-
    df |>
    ggplot(
      aes(
        x = value,
        y = 1
      )
    ) +
    geom_hline(
      yintercept = 1,
      color = "gray90",
      linewidth = 0.25
    ) +
    geom_point(
      shape = 124,
      color = "gray80",
      size = 5
    ) +
    expand_limits(
      x = 0
    ) +
    theme_void() +
    theme(
      axis.text.x = element_text(
        size = 13,
        color = "gray40"
      ),
      legend.position = "none",
      plot.margin = margin(rep(20, 4))
    ) +
    geom_point(
      data = df |> filter(location == highlight_town),
      shape = 124,
      color = "gray30",
      size = 10
    )

  if (value_type == "percent") {
    final_plot <-
      plot +
      scale_x_continuous(
        labels = percent_format(accuracy = 1)
      )
  }

  if (value_type == "number") {
    final_plot <-
      plot +
      scale_x_continuous(
        labels = comma_format(accuracy = 1)
      )
  }

  final_plot
}
```

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "4"
comparison_plot(
  df = single_family_homes,
  highlight_town = "Hartford",
  value_type = "percent"
)
```

. . .

```{r}
#| fig-height: 1.5
comparison_plot(
  df = single_family_homes,
  highlight_town = "Hartford",
  value_type = "percent"
)
```

---

```{r}
total_population <-
  read_rds("data/total_population.rds")
```

```{r}
#| eval: false
total_population
```

```{r}
#| eval: false
total_population |>
  print(n = Inf)
```

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "4"
comparison_plot(
  df = total_population,
  highlight_town = "Hartford",
  value_type = "number"
)
```

. . .

```{r}
#| fig-height: 1.5
comparison_plot(
  df = total_population,
  highlight_town = "Hartford",
  value_type = "number"
)
```


## Big Numbers

. . .

![](assets/single-family-homes-plot.png)

. . .

![](assets/total-population-plot.png)

---

```{r}
total_population <-
  read_rds("data/total_population.rds")
```

```{r}
#| echo: true
big_number_plot <- function(
  value,
  text
) { }
```

---

```{r}
#| echo: true
#| code-line-numbers: "3-13"
big_number_plot <- function(value, text) {
  ggplot() +
    # Add value
    geom_text(
      aes(
        x = 1,
        y = 1,
        label = value
      ),
      fontface = "bold",
      size = 20,
      hjust = 0
    ) +
    theme_void()
}
```

---

```{r}
#| echo: true
#| code-line-numbers: "5-15"
big_number_plot <- function(value, text) {
  ggplot() +
  # Add value
  ...
  # Add text
  geom_text(
    aes(
      x = 1,
      y = 2,
      label = str_to_upper(text)
    ),
    color = "gray70",
    size = 7,
    hjust = 0
  ) +
    theme_void()
}
```

---

```{r}
#| echo: true
#| code-line-numbers: "7"
big_number_plot <- function(value, text) {
  ggplot() +
  # Add value
  ...
  # Add text
  ...
  theme_void()
}
```

---

```{r}
big_number_plot <- function(value, text) {
  ggplot() +
    # Add value
    geom_text(
      aes(
        x = 1,
        y = 1,
        label = value
      ),
      fontface = "bold",
      size = 20,
      hjust = 0
    ) +
    # Add text
    geom_text(
      aes(
        x = 1,
        y = 2,
        label = str_to_upper(text)
      ),
      color = "gray70",
      size = 7,
      hjust = 0,
      lineheight = 1
    ) +
    scale_y_continuous(limits = c(0, 2.25)) +
    theme_void()
}
```

```{r}
#| echo: true
#| eval: false
big_number_plot(
  value = "19%",
  text = "Single-Family Homes as\nPercent of All Homes"
)
```

. . .

```{r}
#| fig-height: 2
big_number_plot(
  value = "19%",
  text = "Single-Family Homes as\nPercent of All Homes"
)
```

## Use Brand Colors {.inverse .center}

---

### Define Brand Colors as Variables

::: {.fragment}
```{r}
#| fig-height: 4
show_col(
  c(
    psc_blue,
    psc_red
  ),
  borders = NA
)
```
:::


::: {.fragment}
```{r}
#| echo: true
psc_blue <- "#15397F"
psc_red <- "#9F3515"
```
:::


---

### Use Brand Colors in Plots

![](assets/single-family-homes-plot.png)

![](assets/total-population-plot.png)

```{r}
comparison_plot <- function(df, highlight_town, value_type, highlight_color) {
  plot <-
    df |>
    ggplot(
      aes(
        x = value,
        y = 1
      )
    ) +
    geom_hline(
      yintercept = 1,
      color = "gray90",
      linewidth = 0.25
    ) +
    geom_point(
      shape = 124,
      color = "gray80",
      size = 5
    ) +
    expand_limits(
      x = 0
    ) +
    theme_void() +
    theme(
      axis.text.x = element_text(
        size = 13,
        color = "gray40"
      ),
      legend.position = "none",
      plot.margin = margin(rep(20, 4))
    ) +
    geom_point(
      data = df |> filter(location == highlight_town),
      shape = 124,
      color = highlight_color,
      size = 10
    )

  if (value_type == "percent") {
    final_plot <-
      plot +
      scale_x_continuous(
        labels = percent_format(accuracy = 1)
      )
  }

  if (value_type == "number") {
    final_plot <-
      plot +
      scale_x_continuous(
        labels = comma_format(accuracy = 1)
      )
  }

  final_plot
}
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5"
comparison_plot <- function(
  df,
  highlight_town,
  value_type,
  highlight_color
) { }
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5,10"
comparison_plot <- function(
  df,
  highlight_town,
  value_type,
  highlight_color
) {
  geom_point(
    data = df |> filter(location == highlight_town),
    shape = 124,
    color = highlight_color,
    size = 10
  )
}
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5"
comparison_plot(
  df = single_family_homes,
  highlight_town = "Hartford",
  value_type = "percent",
  highlight_color = psc_blue
)
```

. . .

```{r}
#| fig-height: 1.5
comparison_plot(
  df = single_family_homes,
  highlight_town = "Hartford",
  value_type = "percent",
  highlight_color = psc_blue
)
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5"
comparison_plot(
  df = total_population,
  highlight_town = "Hartford",
  value_type = "number",
  highlight_color = psc_red
)
```

. . .

```{r}
#| fig-height: 1.5
comparison_plot(
  df = total_population,
  highlight_town = "Hartford",
  value_type = "number",
  highlight_color = psc_red
)
```

---

### Big Numbers

![](assets/single-family-homes-plot.png)

![](assets/total-population-plot.png)

---

```{r}
#| echo: true
#| code-line-numbers: "4"
big_number_plot <- function(
  value,
  text,
  value_color
) { }
```

---

```{r}
#| echo: true
#| code-line-numbers: "4,14"
big_number_plot <- function(
  value,
  text,
  value_color
) {
  ggplot() +
    # Add value
    geom_text(
      aes(
        x = 1,
        y = 1,
        label = value
      ),
      color = value_color,
      fontface = "bold",
      size = 20,
      hjust = 0
    ) +
    ...
}
```

---

```{r}
big_number_plot <- function(value, text, value_color) {
  ggplot() +
    # Add value
    geom_text(
      aes(
        x = 1,
        y = 1,
        label = value
      ),
      color = value_color,
      fontface = "bold",
      size = 20,
      hjust = 0
    ) +
    # Add text
    geom_text(
      aes(
        x = 1,
        y = 2,
        label = str_to_upper(text)
      ),
      color = "gray70",
      size = 7,
      hjust = 0,
      lineheight = 1
    ) +
    scale_y_continuous(limits = c(0, 2.5)) +
    theme_void()
}
```

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "4"
big_number_plot(
  value = "19%",
  text = "Single-Family Homes as\nPercent of All Homes",
  value_color = psc_blue
)
```

. . .

```{r}
#| fig-height: 1.75
big_number_plot(
  value = "19%",
  text = "Single-Family Homes as\nPercent of All Homes",
  value_color = psc_blue
)
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "4"
big_number_plot(
  value = "122,549",
  text = "Total Population",
  value_color = psc_red
)
```

. . .

```{r}
#| fig-height: 1.75
big_number_plot(
  value = "122,549",
  text = "Total Population",
  value_color = psc_red
)
```

# Use Brand Fonts in Plots {.inverse}

## Make a Custom Theme {.inverse}

---

```{r}
#| echo: true
#| eval: false
theme_psc <- function() {
  theme_void(base_family = "Open Sans") +
    theme()
}
```

```{r}
theme_psc <- function() {
  theme_void(base_family = "Open Sans") +
    theme(
      axis.text.x = element_text(
        size = 13,
        color = "gray40"
      ),
      legend.position = "none",
      plot.margin = margin(rep(20, 4))
    )
}
```


---

```{r}
#| fig-height: 1.5
comparison_plot(
  df = total_population,
  highlight_town = "Hartford",
  highlight_color = psc_red,
  value_type = "number"
)
```

. . .

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "7"
comparison_plot(
  df = total_population,
  highlight_town = "Hartford",
  highlight_color = psc_red,
  value_type = "number"
) +
  theme_psc()
```

. . .

```{r}
#| fig-height: 1.5
comparison_plot(
  df = total_population,
  highlight_town = "Hartford",
  highlight_color = psc_red,
  value_type = "number"
) +
  theme_psc()
```

---

```{r}
theme_psc <- function() {
  theme_void(base_family = "Open Sans")
}
```

```{r}
#| fig-height: 1.75
big_number_plot(
  value = "122,549",
  text = "Total Population",
  value_color = psc_red
)
```

. . .

```{r}
#| echo: true
#| eval: false
big_number_plot(
  value = "122,549",
  text = "Total Population",
  value_color = psc_red
) +
  theme_psc()
```

. . .

```{r}
#| fig-height: 1.75
big_number_plot(
  value = "122,549",
  text = "Total Population",
  value_color = psc_red
) +
  theme_psc()
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "4,15"
big_number_plot <- function(value, text) {
  ggplot() +
    # Add value
    geom_text(
      aes(
        x = 1,
        y = 1,
        label = value
      ),
      fontface = "bold",
      size = 20,
      hjust = 0
    ) +
    # Add text
    geom_text(
      aes(
        x = 1,
        y = 2,
        label = str_to_upper(text)
      ),
      color = "gray70",
      size = 7,
      hjust = 0
    ) +
    ...
}
```

---

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "10,22"
big_number_plot <- function(value, text) {
  ggplot() +
    # Add value
    geom_text(
      aes(
        x = 1,
        y = 1,
        label = value
      ),
      family = "Open Sans",
      fontface = "bold",
      size = 20,
      hjust = 0
    ) +
    # Add text
    geom_text(
      aes(
        x = 1,
        y = 2,
        label = str_to_upper(text)
      ),
      family = "Open Sans",
      color = "gray70",
      size = 7,
      hjust = 0
    ) +
    ...
}
```

---

```{r}
#| echo: true
#| eval: false
update_geom_defaults(
  geom = "text",
  aes(family = "Open Sans")
)
```

. . .

```{r}
#| fig-height: 1.75
big_number_plot(
  value = "122,549",
  text = "Total Population",
  value_color = psc_red
) 
```

```{r}
update_geom_defaults(
  geom = "text",
  aes(family = "Open Sans")
)
```

. . .

```{r}
#| fig-height: 1.75
big_number_plot(
  value = "122,549",
  text = "Total Population",
  value_color = psc_red
)
```

::: {.notes}
Tell people to do the same with a table template
:::

---

. . .

````{markdown}
#| echo: true
#| eval: false
---
title: "Housing Data Profiles"
format: typst
---

```{r}  
psc_blue <- "#15397F"
psc_red <- "#9F3515"
```

```{r}
update_geom_defaults()
```


```{r}
big_number_plot()
```

```{r}
comparison_plot()
```

````

# {background-image="assets/psc-sample-only-two-pages.png" background-position="top"}


# {background-image="assets/ecstatic.jpg" .inverse}



---

```{r}
#| eval: false
qr_code("https://rfor.us/posit2024slides") |>
  generate_svg(
    "assets/qrcode-slides.svg",
    background = "transparent",
    show = FALSE
  )

qr_code("https://rfor.us/posit2024repo") |>
  generate_svg(
    "assets/qrcode-repo.svg",
    background = "transparent",
    show = FALSE
  )

qr_code("https://rfor.us/consulting") |>
  generate_svg(
    "assets/qrcode-consulting.svg",
    background = "transparent",
    show = FALSE
  )
```


:::: {.columns}

::: {.column width="50%"}
**Slides**

[rfor.us/posit2024slides](https://rfor.us/posit2024slides){.small}
:::

::: {.column width="50%"}
![](assets/qrcode-slides.svg){fig-align="center" height="175px"}
:::

::::

:::: {.columns}

::: {.column width="50%"}
**GitHub Repo**

[rfor.us/posit2024repo](https://rfor.us/posit2024repo){.small}
:::

::: {.column width="50%"}
![](assets/qrcode-repo.svg){fig-align="center" height="175px"}
:::

::::

:::: {.columns}

::: {.column width="50%"}
**Report Examples**

[rfor.us/consulting](https://rfor.us/consulting){.small}
:::

::: {.column width="50%"}
![](assets/qrcode-consulting.svg){fig-align="center" height="175px"}
:::

::::
